#include <bits/stdc++.h>

#define all(a)           a.begin(),a.end()
#define chng(a,b)       a^=b^=a^=b;
#define clr(y,z)        memset(y,z,sizeof(y))
#define cntbit(mask)     __builtin_popcount(mask)
#define CROSS(a,b,c,d) ((b.x-a.x)*(d.y-c.y)-(d.x-c.x)*(b.y-a.y))
#define fr(i,a,b)       for(i=a;i<=b;i++)
#define inf             (1e9)
#define mod             1000000007
#define ll              long long
#define oo              (1<<30)
#define pb              push_back
#define PI              3.141592653589793
#define pi              (2*acos(0))
#define pp              pop_back
#define rev(a)          reverse(all(a));
#define SIZE(s)         ((int)s.size())
#define saja(a)         sort(all(a))
#define sqr(a)          ((a)*(a))
#define SZ              50005
#define V(a)            vector<(a)>

using namespace std;


class BearCheats {
public:
	string eyesight(int A, int B) {
		char line1[20];
		char line2[20];
		sprintf(line1,"%d",A);
		sprintf(line2,"%d",B);
		int n = strlen(line1);
		if(n!=strlen(line2)) return "glasses";
		bool flag=false;
		for (int i = 0; i<n; i++)
        {
            if(line1[i]!=line2[i]){
                if(flag) return "glasses";
                flag = true;
                }
        }
		return "happy";
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit-pf 2.3.0
#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include <cmath>
using namespace std;
bool KawigiEdit_RunTest(int testNum, int p0, int p1, bool hasAnswer, string p2) {
	cout << "Test " << testNum << ": [" << p0 << "," << p1;
	cout << "]" << endl;
	BearCheats *obj;
	string answer;
	obj = new BearCheats();
	clock_t startTime = clock();
	answer = obj->eyesight(p0, p1);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << "\"" << p2 << "\"" << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << "\"" << answer << "\"" << endl;
	if (hasAnswer) {
		res = answer == p2;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	bool disabled;
	bool tests_disabled;
	all_right = true;
	tests_disabled = false;

	int p0;
	int p1;
	string p2;

	// ----- test 0 -----
	disabled = false;
	p0 = 8072;
	p1 = 3072;
	p2 = "happy";
	all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2) ) && all_right;
	tests_disabled = tests_disabled || disabled;
	// ------------------

	// ----- test 1 -----
	disabled = false;
	p0 = 508;
	p1 = 540;
	p2 = "glasses";
	all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2) ) && all_right;
	tests_disabled = tests_disabled || disabled;
	// ------------------

	// ----- test 2 -----
	disabled = false;
	p0 = 854000;
	p1 = 854000;
	p2 = "happy";
	all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2) ) && all_right;
	tests_disabled = tests_disabled || disabled;
	// ------------------

	// ----- test 3 -----
	disabled = false;
	p0 = 1;
	p1 = 6;
	p2 = "happy";
	all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2) ) && all_right;
	tests_disabled = tests_disabled || disabled;
	// ------------------

	// ----- test 4 -----
	disabled = false;
	p0 = 385900;
	p1 = 123000;
	p2 = "glasses";
	all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, true, p2) ) && all_right;
	tests_disabled = tests_disabled || disabled;
	// ------------------

	if (all_right) {
		if (tests_disabled) {
			cout << "You're a stud (but some test cases were disabled)!" << endl;
		} else {
			cout << "You're a stud (at least on given cases)!" << endl;
		}
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// PROBLEM STATEMENT
// Limak is an old brown bear.
// Because of his bad eyesight he sometimes has to visit his doctor, Dr. Carrot.
// Today is one such day.
//
// Dr. Carrot has a blackboard in his office.
// There is a number A written on the blackboard.
// In order to examine Limak's eyesight, Dr. Carrot asked him to read the number.
// Limak couldn't see the number really well.
// He could determine the number of digits correctly, but he was not sure what the individual digits are.
// Finally, he decided to announce the number B to the doctor.
// The doctor then left the office for a short while.
//
// Limak really doesn't want to wear glasses, so he has decided to cheat.
// As soon as the doctor left the room, Limak went to the blackboard to read the correct number A.
// Before the doctor returns, Limak has the time to change one of the digits of A to any different digit.
// (Note that he may not add any new digits to A and he may not completely erase any digits of A.
// He may only change at most one of the digits.)
// Limak hopes that he can deceive the doctor by changing the number A into his number B.
//
// You are given the ints A and B.
// Return the string "happy" (quotes for clarity) if Limak can convince the doctor that his eyesight is good.
// Otherwise, return the string "glasses".
//
// DEFINITION
// Class:BearCheats
// Method:eyesight
// Parameters:int, int
// Returns:string
// Method signature:string eyesight(int A, int B)
//
//
// CONSTRAINTS
// -A and B will be between 1 and 999,999, inclusive.
// -A and B will have the same number of digits.
//
//
// EXAMPLES
//
// 0)
// 8072
// 3072
//
// Returns: "happy"
//
// Limak wants to change 8072 into 3072. He can do that by changing the digit 8 to a 3.
//
// 1)
// 508
// 540
//
// Returns: "glasses"
//
// Limak would need to change two digits, but he only has the time to change at most one.
//
// 2)
// 854000
// 854000
//
// Returns: "happy"
//
// It is possible that Limak read the number correctly. If that happens, he will not change any digits.
//
// 3)
// 1
// 6
//
// Returns: "happy"
//
//
//
// 4)
// 385900
// 123000
//
// Returns: "glasses"
//
//
//
// END KAWIGIEDIT TESTING
