#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cctype>
#include <fstream>

#define sz 51
#define pb(a) push_back(a)
#define pp pop_back()
#define ll long long
#define fread freopen("input.txt","r",stdin)
#define fwrite freopen("output.txt","w",stdout)
#define mod 1000000007
#define clr(abc,z) memset(abc,z,sizeof(abc))
#define PI acos(-1)

using namespace std;

class VocaloidsAndSongs {
public:
    ll dp[sz][sz][sz][sz];
    ll rec(int n, int a, int b, int c)
    {
        if(a<0||b<0||c<0) return 0;
        if(n==0)
        {
            if(a==0&&b==0&&c==0) return 1;
            else return 0;
        }
        ll &ret = dp[n][a][b][c];
        if(ret!=-1) return ret;

        ret = 0;

        ret+=rec(n-1, a-1, b,c)%mod;
        ret+=rec(n-1, a-1, b-1,c)%mod;
        ret+=rec(n-1, a-1, b,c-1)%mod;
        ret+=rec(n-1, a-1, b-1,c-1)%mod;
        ret+=rec(n-1, a, b-1,c)%mod;
        ret+=rec(n-1, a, b-1,c-1)%mod;
        ret+=rec(n-1, a, b,c-1)%mod;

        return ret%mod;
    }


	int count(int S, int gumi, int ia, int mayu) {
		clr(dp,-1);
		if(S<=gumi+ia+mayu)return (int)(rec(S,gumi,ia,mayu)%mod);
		else return 0;
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int p3, bool hasAnswer, int p4) {
	cout << "Test " << testNum << ": [" << p0 << "," << p1 << "," << p2 << "," << p3;
	cout << "]" << endl;
	VocaloidsAndSongs *obj;
	int answer;
	obj = new VocaloidsAndSongs();
	clock_t startTime = clock();
	answer = obj->count(p0, p1, p2, p3);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p4 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p4;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	int p0;
	int p1;
	int p2;
	int p3;
	int p4;

	{
	// ----- test 0 -----
	p0 = 3;
	p1 = 1;
	p2 = 1;
	p3 = 1;
	p4 = 6;
	all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
	// ------------------
	}

	{
	// ----- test 1 -----
	p0 = 3;
	p1 = 3;
	p2 = 1;
	p3 = 1;
	p4 = 9;
	all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
	// ------------------
	}

	{
	// ----- test 2 -----
	p0 = 50;
	p1 = 10;
	p2 = 10;
	p3 = 10;
	p4 = 0;
	all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
	// ------------------
	}

	{
	// ----- test 3 -----
	p0 = 18;
	p1 = 12;
	p2 = 8;
	p3 = 9;
	p4 = 81451692;
	all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
	// ------------------
	}

	{
	// ----- test 4 -----
	p0 = 50;
	p1 = 25;
	p2 = 25;
	p3 = 25;
	p4 = 198591037;
	all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
	// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// PROBLEM STATEMENT
// Vocaloids Gumi, Ia, and Mayu love singing.
// They decided to make an album composed of S songs.
// Each of the S songs must be sung by at least one of the three Vocaloids.
// It is allowed for some songs to be sung by any two, or even all three Vocaloids at the same time.
// The number of songs sang by Gumi, Ia, and Mayu must be gumi, ia, and mayu, respectively.
//
// They soon realized that there are many ways of making the album.
// Two albums are considered different if there is a song that is sung by a different set of Vocaloids.
// Let X be the number of possible albums.
// Since the number X can be quite large, compute and return the number (X modulo 1,000,000,007).
//
// DEFINITION
// Class:VocaloidsAndSongs
// Method:count
// Parameters:int, int, int, int
// Returns:int
// Method signature:int count(int S, int gumi, int ia, int mayu)
//
//
// CONSTRAINTS
// -S will be between 1 and 50, inclusive.
// -gumi, ia and mayu will be each between 1 and S, inclusive.
//
//
// EXAMPLES
//
// 0)
// 3
// 1
// 1
// 1
//
// Returns: 6
//
// In this case, there are 3 songs on the album. And Gumi, Ia, Mayu will each sing one song.
// There are 3*2*1 = 6 ways how to choose which Vocaloid sings which song.
//
// 1)
// 3
// 3
// 1
// 1
//
// Returns: 9
//
// Gumi will sing all three songs. Ia and Mayu can each choose which one song they want to sing.
//
// 2)
// 50
// 10
// 10
// 10
//
// Returns: 0
//
// It is not possible to record 50 songs if each Vocaloid can only sing 10 of them.
//
// 3)
// 18
// 12
// 8
// 9
//
// Returns: 81451692
//
//
//
// 4)
// 50
// 25
// 25
// 25
//
// Returns: 198591037
//
//
//
// END KAWIGIEDIT TESTING


//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
